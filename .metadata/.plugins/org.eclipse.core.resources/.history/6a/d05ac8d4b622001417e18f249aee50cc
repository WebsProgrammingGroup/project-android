package com.example.logintest;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Calendar;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;

public class MainActivity extends Activity implements OnClickListener
{
	private TextView mDateDisplay;
	private int mYear;
	private int mMonth;
	private int mDay;
	static final int DATE_DIALOG_ID = 0;
	Handler handler =new Handler();
	String result="";
	public void onCreate(Bundle savedInstanceState)
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		LinearLayout btn = (LinearLayout) findViewById(R.id.JoinBtn);
		btn.setOnClickListener(this);

		mDateDisplay = (TextView) findViewById(R.id.EditBirthday);
		mDateDisplay.setTextSize(17);
		
		mDateDisplay.setOnClickListener(new View.OnClickListener() {
			@SuppressWarnings("deprecation")
			public void onClick(View v) {
				showDialog(DATE_DIALOG_ID);
			}
		});

		final Calendar c = Calendar.getInstance();
		mYear = c.get(Calendar.YEAR);
		mMonth = c.get(Calendar.MONTH);
		mDay = c.get(Calendar.DAY_OF_MONTH);
	}

	public void onClick(View v)
	{
		String str_familyName = null;
		
		EditText et_familyName = (EditText) findViewById(R.id.FamilyNameInput);
		str_familyName = et_familyName.getText().toString();//
		
		EditText et_name = (EditText) findViewById(R.id.NameInput);
		String str_name = et_name.getText().toString();//

		EditText et_email = (EditText) findViewById(R.id.MailAdressInput);
		String str_email = et_email.getText().toString();//

		EditText et_pass = (EditText) findViewById(R.id.PasswordInput);
		String str_pass = et_pass.getText().toString();//

		TextView et_birth = (TextView) findViewById(R.id.EditBirthday);
		String str_birth = et_birth.getText().toString();//

		RadioGroup rg_sex = (RadioGroup) findViewById(R.id.RadioGroup);
		RadioButton rb_male = (RadioButton) findViewById(R.id.Radio1);//
		RadioButton rb_female = (RadioButton) findViewById(R.id.Radio2);//
		String str_sex = "";

		if (rg_sex.getCheckedRadioButtonId() == R.id.Radio1) {
			str_sex = rb_male.getText().toString();
		}
		if (rg_sex.getCheckedRadioButtonId() == R.id.Radio2) {
			str_sex = rb_female.getText().toString();
		}
		
		if(str_familyName.equals("")||str_name.equals("")||str_email.equals("")||str_pass.equals("")||str_birth.equals("")||str_sex.equals(""))
		{
			AlertDialog.Builder alert = new AlertDialog.Builder(this);
			alert.setTitle("회원정보를 모두 입력해 주세요");
			
			if(str_familyName.equals(""))
				alert.setMessage("성을 입력해주세요");
			else if(str_name.equals(""))
				alert.setMessage("이름을 입력해주세요");
			else if(str_email.equals(""))
				alert.setMessage("email을 입력해주세요");
			else if(str_pass.equals(""))
				alert.setMessage("비밀번호를 입력해주세요");
			else if(str_birth.equals(""))
				alert.setMessage("생일을 입력해주세요");
			else if(str_sex.equals(""))
				alert.setMessage("성별을 입력해주세요");
			
			alert.setPositiveButton("확인", null);
			alert.show();
		}
		else
		{		
			//ProgressDialog dialog = ProgressDialog.show(p08_MemberJoinActivity.this, "","잠시만 기다려 주세요 ...", true);
			//dialog.dismiss();
			sendData(str_familyName, str_name, str_email, str_pass, str_birth, str_sex);
		}
	}

	

	protected Dialog onCreateDialog(int id) {

		switch (id) {
		case DATE_DIALOG_ID:
			return new DatePickerDialog(this, mDateSetListener, mYear, mMonth,
					mDay);
		}
		return null;
	}

	private DatePickerDialog.OnDateSetListener mDateSetListener = new DatePickerDialog.OnDateSetListener() {
		public void onDateSet(DatePicker view, int year, int monthOfYear,
				int dayOfMonth) {
			mYear = year;
			mMonth = monthOfYear;
			mDay = dayOfMonth;

			updateDisplay();
		}
	};

	private void updateDisplay() {
		mDateDisplay.setText(new StringBuilder().append(mYear).append("-")
				.append(mMonth + 1).append("-").append(mDay).append(""));
	}

	
	
	private void sendData(String familyName,String name ,String email,String pw,String birth,String gender){
		final ArrayList<NameValuePair> list =new ArrayList<NameValuePair>();
		 list.add(new BasicNameValuePair("familyName", familyName));
		 list.add(new BasicNameValuePair("name", name));
		 list.add(new BasicNameValuePair("email", email));
		 list.add(new BasicNameValuePair("pw", pw));
		 list.add(new BasicNameValuePair("birth", birth));
		 list.add(new BasicNameValuePair("gender", gender));
		 final String url="http://wpg.azurewebsites.net/join.jsp";
			Thread t = new Thread(new Runnable() {
				@Override
				public void run() {

					InputStream is = requestPost(url, list);
					result = streamToString(is);
					Log.d("result", result);
					handler.post(new Runnable() {

						@Override
						public void run() {

							
						}
					});
				}
			});
			t.start();
		 
	}
	public InputStream requestPost(String requestUrl,
			ArrayList<NameValuePair> list) {

		try {
			HttpClient client = new DefaultHttpClient();
			HttpPost request = new HttpPost(requestUrl);
			request.setEntity(new UrlEncodedFormEntity(list, "UTF-8"));

			HttpResponse response = client.execute(request);
			HttpEntity entity = response.getEntity();
			InputStream is = entity.getContent();

			return is;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	public String streamToString(InputStream is) {

		StringBuffer buffer = new StringBuffer();
		try {
			BufferedReader reader = new BufferedReader(
					new InputStreamReader(is));
			String str = reader.readLine();
			while (str != null) {
				buffer.append(str);
				str = reader.readLine();
			}
			reader.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return buffer.toString();
	}
	
	
	
}

